import cv2
import rospy
from std_msgs.msg import Int32

# Define a range of green color in BGR
lower_green = (0, 90, 0)
upper_green = (80, 255, 80)

# Create a VideoCapture object to capture video from the default camera
cap = cv2.VideoCapture(1)

# Initialize ROS node and publisher
rospy.init_node('green_detection')
pub = rospy.Publisher('green_detected', Int32, queue_size=10)

# Create a loop to continuously capture frames from the camera and detect grass in each frame
while not rospy.is_shutdown():
    # Capture a frame from the camera
    ret, frame = cap.read()

    # Threshold the frame to get only green pixels
    mask = cv2.inRange(frame, lower_green, upper_green)

    # Apply a morphological opening to remove noise
    kernel = cv2.getStructuringElement(cv2.MORPH_ELLIPSE, (5, 5))
    mask = cv2.morphologyEx(mask, cv2.MORPH_OPEN, kernel)

    # Find contours in the mask
    contours, hierarchy = cv2.findContours(mask, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)

    # Check if any contours were found
    if len(contours) > 0:
        # Green detected
        #print("Green detected")
        cv2.drawContours(frame, contours, -1, (0, 255, 0), 2)
        pub.publish(1)
    
    else:
        # Green not detected
        #print("Green not detected")
        pub.publish(0)

    # Display the result
    cv2.imshow("Green Detection", frame)

    # Wait for a key press to exit
    if cv2.waitKey(1) == ord('q'):
        break

# Release the VideoCapture object and close any windows
cap.release()
cv2.destroyAllWindows()